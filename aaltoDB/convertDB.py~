import numpy as np
import h5py
import readAFMDATAfile as rAFM
import glob


f = h5py.File("/l/reischt1/AFMDB_version_02.hdf5", "w")

# glob.glob...
# for molecule in glob.glob:...

moleculefiles = glob.glob('/l/reischt1/outputxyz_80pnts/*')

for moleculefile in moleculefiles:

    moleculenumberstr = moleculefile.split('_')[2].split('.')[0]
    molstring = 'molecule'+ moleculenumberstr

    print('Starting molecule '+molstring)

    # Create group for the molecule
    f.create_group(molstring)

    # Open the molecule-class
    mol = rAFM.afmmolecule(moleculefile)
    molattrs = mol.return_totalNumbers()

    # Give the molecules it's most imortant properties, at the time of writing this, this includes totalNumOrientations, numAtoms, atomNameString
    for attr in molattrs.keys(): 
        f[molstring].attrs[attr] = molattrs[attr]

    for orientation in range(molattrs['totalNumOrientations']):

        orientationstring = molstring+'/orientation'+str(orientation)

        print('Doing Orientation: '+orientationstring)

        # Read data from file
        fzdata=mol.F_orientation(orientation)
        fzarray=fzdata[0]
        atomNameString=fzdata[1]
        atomPosition = fzdata[2]
        widthxyz = fzdata[3]
        dxyz = fzdata[4]
        divxyz = fzdata[5]
        solutionarray = mol.solution_xymap_projection(orientation)

        #Write to HDF5-file:
        #First write the np.arrays:
        dsetfz = f.create_dataset(orientationstring+'/fzvals', fzarray.shape)
        dsetfz[...] = fzarray
        dsetsol = f.create_dataset(orientationstring+'/solution', solutionarray.shape)
        dsetsol[...] = solutionarray
        dsetpos = f.create_dataset(orientationstring+'/atomPosition', atomPosition.shape)
        dsetpos[...] = atomPosition

        # Write stuff into the attrs of the orientation:
        f[orientationstring].attrs['atomNameString'] = fzdata[1] # This might be redundant, but it is saved along with the atom positions, that's why it is important (the order of it!).
        f[orientationstring].attrs['widthxyz'] = fzdata[3]
        f[orientationstring].attrs['dxyz'] = fzdata[4]
        f[orientationstring].attrs['divxyz'] = fzdata[5]



f.close()

# then you can call it e.g. via dset[:,:,0,0]

# for name in f:
#     print name

# for name in  f['molecule2']:
#     print name


# for name in  f['molecule2/orientation2']:
#     print name


# dset = f['molecule2/orientation2/fzvals']
# dset[:,:,1,0]
