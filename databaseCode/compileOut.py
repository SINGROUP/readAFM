import struct
import glob
import argparse

parser = argparse.ArgumentParser(description="Take a folder with the .AFM files generated by makeBinary.py and compile all the files into one .AFMDATA file")
parser.add_argument("-i", "--input_folder", default="input.scan", help="the path to the input .SCAN file (default: %(default)s)")
args = parser.parse_args()

if not args.input_folder.endswith('/'):
    inFolder = args.input_folder+'/'
else:
    inFolder = args.input_folder

countOut = 0
compiledCoutFile = open(inFolder + inFolder.split('/')[-2] + '.afmdata', "wb+")
compiledCoutFile.write(struct.pack('i', countOut))

for outFilePath in glob.glob(inFolder+"*.afm"):
    outFile = open(outFilePath, "rb")
    countOut += 1
    compiledCoutFile.write(outFile.read())
    outFile.close()

compiledCoutFile.seek(0)
compiledCoutFile.write(struct.pack('i', countOut))

compiledCoutFile.close()
